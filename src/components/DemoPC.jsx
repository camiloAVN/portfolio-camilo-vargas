/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Dan (https://sketchfab.com/fizyman)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/crt-computer-monitor-f2ff0013f86e4cd0a2aee183a23bdfee
Title: CRT Computer Monitor
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF, useVideoTexture } from '@react-three/drei'
import { useGSAP } from '@gsap/react'
import gsap from 'gsap'
import * as THREE from 'three'

const DemoPC = (props) => {
  const group = useRef()
  const { nodes, materials } = useGLTF('/models/OldMonitor.glb')
  const txt = useVideoTexture(props.texture ? props.texture:'/textures/1.mp4', {
  hls: { abrEwmaFastLive: 1.0, abrEwmaSlowLive: 3.0, enableWorker: true,  }, 
})
txt.repeat.set(5, 6) 
txt.offset.set(2.95, 4)
txt.wrapS = txt.wrapT = THREE.RepeatWrapping


 txt.center.set(0.5, 0.5) // Centro de rotación
 txt.rotation = Math.PI / 2 // Rotación

  useGSAP(()=>{
    gsap.from(group.current.rotation, {
        y:Math.PI /3,
        duration: 1,
        ease: 'power3.out'
    })
  }, [txt])

  return (
    <group {...props} dispose={null} ref={group}>
      <group scale={0.01}>
        <group position={[0, -7.127, 5.522]} rotation={[-Math.PI / 2, 0, 0]} scale={10}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.CRT_Monitor_monitor_glass_0.geometry}
            material={materials.monitor_glass}
           
          >
            <meshBasicMaterial map={txt}/>
          </mesh>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.CRT_Monitor_monitor_plastic_0.geometry}
            material={materials.monitor_plastic}
          />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/OldMonitor.glb');

export default DemoPC;
